on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            binary_name: zinit-linux-x86_64
          # macOS builds
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: zinit-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: zinit-macos-aarch64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup build environment (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # Install required build tools for macOS
          brew install llvm
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Build release
        env:
          CC: ${{ matrix.os == 'macos-latest' && 'clang' || '' }}
          CXX: ${{ matrix.os == 'macos-latest' && 'clang++' || '' }}
        run: |
          cargo build --release --target=${{ matrix.target }}
      
      - name: Strip binary
        run: |
          strip target/${{ matrix.target }}/release/zinit
      
      - name: Rename binary
        run: |
          cp target/${{ matrix.target }}/release/zinit ${{ matrix.binary_name }}
      
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.binary_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
